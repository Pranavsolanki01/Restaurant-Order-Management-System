# Multi-stage Dockerfile for Spring Boot auth-service
# This version includes the complete build process within Docker for CI/CD scenarios

# Stage 1: Build stage
FROM maven:3.9-eclipse-temurin-21 AS build

# Set working directory for build
WORKDIR /build

# Copy Maven configuration files
COPY pom.xml .
COPY .mvn .mvn
COPY mvnw .

# Copy source code
COPY src ./src

# Build the application
# Using -o flag to work offline after dependency download, and skip tests
RUN mvn clean package -DskipTests -B --no-transfer-progress

# Stage 2: Runtime stage
FROM eclipse-temurin:21-jdk-alpine

# Set metadata labels
LABEL maintainer="Restaurant Management System" \
      description="Auth Service for Restaurant Order Management System" \
      version="1.0"

# Create a non-root user for security
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Set working directory
WORKDIR /app

# Switch to non-root user
USER appuser

# Copy the built JAR file from build stage
COPY --from=build --chown=appuser:appgroup /build/target/auth-service-*.jar app.jar

# Expose the port the app runs on
EXPOSE 8081

# Configure JVM options for containerized environment
ENV JAVA_OPTS="-Xmx512m -Xms256m -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"

# Run the application with optimized JVM settings
CMD ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]